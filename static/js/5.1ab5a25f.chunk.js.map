{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Textarea","props","hasError","meta","touched","error","className","styles","formControl","input","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","Message","s","dialog","message","DialogItem","path","id","active","to","maxLengthMessage50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.1ab5a25f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__x4y-b\",\"error\":\"FormsControls_error__2VbGF\",\"formSummaryError\":\"FormsControls_formSummaryError__DfVoe\"};","import React from \"react\";\r\nimport styles from \"../FormsControls/FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.child}\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, validators: any, component: any, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yOTe\",\"dialogsItems\":\"Dialogs_dialogsItems__2JE7y\",\"active\":\"Dialogs_active__16Dpi\",\"messages\":\"Dialogs_messages__1DfrS\",\"dialog\":\"Dialogs_dialog__3RvxE\"};","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\ntype MessageType = {\r\n    message: any\r\n}\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItem = {\r\n    name: string\r\n    id: string | number\r\n}\r\n\r\nconst DialogItem = (props: DialogItem) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\n\r\n\r\nconst maxLengthMessage50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={ [required, maxLengthMessage50] }\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogs-add-message-form\"})(AddMessageForm);","import React from 'react';\r\nimport s from \"./Dialogs.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogPageType} from \"../../redux/store\";\r\nimport {Redirect} from \"react-router\"\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\ntype PropType = {\r\n    updateNewMessageBody: (onNewMessageChange: any) => void\r\n    sendMessage: (values?: any) => void\r\n    dialogsPage: DialogPageType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst Dialogs = (props: PropType) => {\r\n\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router\"\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\n// type MapStateToPropsType = {\r\n//     dialogsPage: DialogPageType\r\n//     isAuth: (auth: boolean) => void\r\n// }\r\n// type PropType = {\r\n// store: any\r\n// dispatch: (action: ActionType) => void\r\n// }\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<any>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}