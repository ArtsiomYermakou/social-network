{"version":3,"sources":["serviceWorker.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","redux/users-reducer.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","redux/app-reducer.tsx","redux/sidebar-reducer.tsx","redux/redux-store.tsx","App.tsx","index.tsx","redux/auth-reducer.tsx","components/common/preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.tsx","api/api.tsx","assets/images/businessperson-computer-icons-avatar-clip-art-avatar.jpg","redux/dialogs-reducer.tsx","components/Users/users.module.css","assets/images/loaderr.svg","components/Navbar/Navbar.module.css"],"names":["Boolean","window","location","hostname","match","Header","props","className","s","header","src","alt","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","state","auth","Navbar","nav","item","activeClassName","activeLink","active","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unFollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","action","map","u","id","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","pageNumber","key","e","Users","photos","small","userPhoto","disabled","some","unfollow","follow","name","status","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageTitle","Preloader","compose","usersAPI","bind","unFollow","page","items","totalCount","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","LoginPage","App","catchAllUnhandledErrors","reason","alert","initializeApp","addEventListener","removeEventListener","Suspense","fallback","exact","path","render","AppContainer","withRouter","promise","getAuthUserData","Promise","all","then","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","email","captchaUrl","setAuthUserDataAC","payload","getCaptchaUrlSuccess","authAPI","me","response","password","rememberMe","captcha","getCaptchaUrl","messages","length","stopSubmit","_error","securityAPI","url","style","backgroundColor","preloader","module","exports","posts","likesCount","profile","newPostText","addPostActionCreator","setStatus","getUserProfile","getProfile","getStatus","profileAPI","updateStatus","savePhoto","file","saveProfile","getState","reject","newPost","postId","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","warn","put","photoFile","formData","FormData","append","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.371b7f6f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"http://webmentor.gr/wp-content/uploads/2018/11/logo300X300.png\" alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component<any> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"4312\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"234521\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"5423\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import {ActionType} from \"./store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type FollowActionCreatorType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport type UnfollowActionCreatorType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport type SetUsersCreatorType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport type SetCurrentPageCreatorType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport type SetUsersTotalCountCreatorType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport type SetIsFetchingCreatorType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport type SetIsFollowingCreatorType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //Array of users ids\r\n};\r\n\r\nconst usersReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowActionCreatorType => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId: number): UnfollowActionCreatorType => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UserType>): SetUsersCreatorType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageCreatorType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetUsersTotalCountCreatorType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching: boolean): SetIsFetchingCreatorType => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): SetIsFollowingCreatorType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: (userId: number) => void) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ( { totalItemsCount, pageSize, currentPage,\r\n                                          onPageChanged, portionSize = 10 } ) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {FC} from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/businessperson-computer-icons-avatar-clip-art-avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: any\r\n}\r\n\r\nlet Users: FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                   onPageChanged={onPageChanged} />\r\n        {\r\n            users.map((u: any) => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null\r\n                                ? u.photos.small\r\n                                : userPhoto} className={styles.userPhoto} alt=\"avatar\"/>\r\n                        </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                          onClick={() => {\r\n                                              props.unfollow(u.id);\r\n                                          }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some((id: any) => id === u.id)}\r\n                                          onClick={() => {\r\n                                              props.follow(u.id);\r\n                                          }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n        return users.filter(users => true)\r\n    }\r\n)\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n ","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {unfollow, follow, requestUsers} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n        mapStateToProps,\r\n        {follow, unfollow, getUsers: requestUsers})\r\n)(UsersContainer);","import {ActionType} from \"./store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nexport type SetInitializedCreatorType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = (): SetInitializedCreatorType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => { dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","import {ActionType} from \"./store\";\r\n\r\nlet initialState = {}\r\n\r\ntype initialStateType = typeof initialState\r\nconst sidebarReducer = (state: initialStateType = initialState, action: ActionType) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers =  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst store = createStore(rootReducer, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route, withRouter, Switch, Redirect, HashRouter} from \"react-router-dom\"\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport store, {AppStateType} from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\nconst LoginPage = React.lazy(() => import(\"./components/Login/Login\"))\n\n\nclass App extends React.Component <any> {\n    catchAllUnhandledErrors = (reason: any) => {\n        alert(\"Some Error\");\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <React.Suspense fallback={<Preloader/>}>\n                        <Switch>\n                            <Route exact path='/'\n                                   render={() =>  <Redirect to={\"/profile\"} />} />\n\n                            <Route path=\"/dialogs\"\n                                   render={() => <DialogsContainer/>}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={() => <ProfileContainer/>}/>\n\n                            <Route path=\"/users\"\n                                   render={() => <UsersContainer pageTitle={\"Samurais\"}/>}/>\n\n                            <Route path=\"/login\"\n                                   render={() => <LoginPage/>}/>\n\n                            <Route path=\"*\"\n                                   render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </React.Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose<any>(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nlet SamuraiJsApp = (props: any) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJsApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJsApp from './App';\n\n\nReactDOM.render( <SamuraiJsApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {ActionType} from \"./store\";\r\nimport {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"samurai-network/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\ntype SetUserDataActionPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport type SetUserDataActionCreatorType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: SetUserDataActionPayloadType\r\n}\r\n\r\nexport type GetCaptchaUrlSuccessActionCreatorType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: {captchaUrl: string}\r\n}\r\n\r\ntype InitialStateType = {\r\n    userId: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetUserDataActionCreatorType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionCreatorType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserDataAC(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserDataAC(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import preloader from \"../../../assets/images/loaderr.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div style={{backgroundColor: \"White\"}}>\r\n            <img src={preloader} alt=\"preload\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__20xxq\",\"pageNumber\":\"Paginator_pageNumber__2dRyN\",\"selectedPage\":\"Paginator_selectedPage__2zM-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__aj2f7\",\"loginBlock\":\"Header_loginBlock__12B21\"};","import {ActionType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\n\r\nexport type AddPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport type SetUserProfileCreatorType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\nexport type SetStatusCreatorType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport type DeletePostCreatorType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport type SavePhotoSuccessCreatorType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It's my first\", likesCount: 11},\r\n        {id: 3, message: \"Русские слова\", likesCount: 423},\r\n        {id: 4, message: \"Dada\", likesCount: 21},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    newPostText: \"\"\r\n};\r\n\r\nconst profileReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileCreatorType => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status: string): SetStatusCreatorType => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId: number): DeletePostCreatorType => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessCreatorType => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"298395db-2088-448b-824f-15482d6c3999\"},\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn(\"obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status: string){\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile: any){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: any){\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/businessperson-computer-icons-avatar-clip-art-avatar.b2fce85a.jpg\";","import {ActionType} from \"./store\";\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nexport type SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Ksusha\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valery\"},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your It?\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ] as Array<MessageType>\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst dialogsReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [ ...state.messages, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({ type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1BI-A\"};","module.exports = __webpack_public_path__ + \"static/media/loaderr.818b13e5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2qOTI\",\"item\":\"Navbar_item__3I-R2\",\"activeLink\":\"Navbar_activeLink__2_x1e\"};"],"sourceRoot":""}