{"version":3,"sources":["serviceWorker.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","redux/users-reducer.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","redux/app-reducer.tsx","redux/sidebar-reducer.tsx","redux/redux-store.tsx","App.tsx","index.tsx","redux/auth-reducer.tsx","components/common/preloader/Preloader.tsx","components/Header/Header.module.css","redux/profile-reducer.tsx","components/Navbar/Navbar.module.css","redux/dialogs-reducer.tsx","components/Users/users.module.css","assets/images/businessperson-computer-icons-avatar-clip-art-avatar.jpg","components/common/Paginator/Paginator.module.css","assets/images/loaderr.svg","api/api.tsx"],"names":["Boolean","window","location","hostname","match","Header","props","className","s","header","src","alt","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","state","auth","Navbar","nav","item","activeClassName","activeLink","active","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","action","map","u","id","followed","count","filter","Paginator","pagesCount","Math","ceil","pages","i","push","p","styles","selectedPage","e","onPageChanged","Users","key","photos","small","userPhoto","disabled","some","unfollow","follow","name","status","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","Preloader","compose","usersAPI","bind","unFollow","page","items","totalCount","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","LoginPage","App","initializeApp","Suspense","fallback","path","render","AppContainer","withRouter","promise","getAuthUserData","Promise","all","then","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","email","setAuthUserDataAC","payload","authAPI","me","response","password","rememberMe","messages","length","stopSubmit","_error","style","backgroundColor","preloader","module","exports","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getProfile","getStatus","profileAPI","updateStatus","newPost","postId","dialogs","sendMessageCreator","newMessageBody","body","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","warn","put"],"mappings":"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","file":"static/js/main.135037f3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"http://webmentor.gr/wp-content/uploads/2018/11/logo300X300.png\" alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component<any> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"4312\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"234521\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"5423\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import {ActionType} from \"./store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type FollowActionCreatorType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport type UnfollowActionCreatorType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport type SetUsersCreatorType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersType>\r\n}\r\nexport type SetCurrentPageCreatorType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport type setUsersTotalCountCreatorType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport type setIsFetchingCreatorType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport type setIsFollowingCreatorType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport type StateProfile = typeof initialState\r\n\r\ntype LocationUserType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    location: LocationUserType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<any>\r\n};\r\n\r\nconst usersReducer = (state: StateProfile = initialState, action: ActionType): StateProfile => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowActionCreatorType => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId: number): UnfollowActionCreatorType => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UsersType>): SetUsersCreatorType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageCreatorType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount: number): setUsersTotalCountCreatorType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingCreatorType => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): setIsFollowingCreatorType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: (userId: number) => void) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {MouseEvent} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nlet Paginator = (props: PropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        {pages.map(p => {\r\n            return <span className={props.currentPage === p ? styles.selectedPage : \"\"}\r\n                         onClick={(e: MouseEvent) => {\r\n                             props.onPageChanged(p)\r\n                         }}>{p}</span>\r\n        })}\r\n    </div>\r\n\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/businessperson-computer-icons-avatar-clip-art-avatar.jpg\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: any\r\n}\r\n\r\nlet Users = (props: PropsType) => {\r\n    return <div>\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage}\r\n                   onPageChanged={props.onPageChanged} />\r\n        {\r\n            props.users.map((u: any) => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            <img src={u.photos.small != null\r\n                                ? u.photos.small\r\n                                : userPhoto} className={styles.userPhoto} alt=\"avatar\"/>\r\n                        </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                          onClick={() => {\r\n                                              props.unfollow(u.id);\r\n                                          }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some((id: any) => id === u.id)}\r\n                                          onClick={() => {\r\n                                              props.follow(u.id);\r\n                                          }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter((u: any) => true)\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n ","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    follow, UsersType, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<MapStatePropsType & MapDispatchPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose<any>(\r\n    connect(mapStateToProps,\r\n        {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);","import {ActionType} from \"./store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nexport type setInitializedCreatorType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport type StateProfile = typeof initialState\r\n\r\ntype DataType = {\r\n    initialized: boolean | string\r\n}\r\n\r\nlet initialState: DataType = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state: StateProfile = initialState, action: ActionType): StateProfile => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = (): setInitializedCreatorType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => { dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","import {ActionType} from \"./store\";\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state:any = initialState, action:ActionType) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers =  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\"\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport store, {AppStateType} from \"./redux/redux-store\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import LoginPage from \"./components/Login/Login\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\nconst LoginPage = React.lazy(() => import(\"./components/Login/Login\"))\n\n\nclass App extends React.Component <any> {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <React.Suspense fallback={<Preloader/>}>\n                        <Route path=\"/dialogs\"\n                               render={() => <DialogsContainer/>}/>\n\n                        <Route path='/profile/:userId?'\n                               render={() => <ProfileContainer/>}/>\n\n                        <Route path=\"/users\"\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path=\"/login\"\n                               render={() => <LoginPage/>}/>\n                    </React.Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose<any>(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nlet SamuraiJsApp = (props: any) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJsApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJsApp from './App';\n\n\nReactDOM.render( <SamuraiJsApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {ActionType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\n\r\nexport type setUserDataActionCreatorType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: DataType\r\n}\r\n\r\nexport type StateProfile = typeof initialState\r\n\r\ntype DataType = {\r\n    userId: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: DataType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state: StateProfile = initialState, action: ActionType): StateProfile => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userId: null | string, email: null | string, login: null | string, isAuth: boolean): setUserDataActionCreatorType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserDataAC(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserDataAC(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import preloader from \"../../../assets/images/loaderr.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div style={{backgroundColor: \"White\"}}>\r\n            <img src={preloader} alt=\"preload\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__aj2f7\",\"loginBlock\":\"Header_loginBlock__12B21\"};","import {ActionType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\n\r\nexport type AddPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport type SetUserProfileCreatorType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: any\r\n}\r\n\r\nexport type SetStatusCreatorType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport type DeletePostCreatorType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\n\r\ntype StateProfile = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It's my first\", likesCount: 11},\r\n        {id: 3, message: \"Русские слова\", likesCount: 423},\r\n        {id: 4, message: \"Dada\", likesCount: 21},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state: StateProfile = initialState, action: ActionType): StateProfile => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile: null): SetUserProfileCreatorType => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status: string): SetStatusCreatorType => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId: number): DeletePostCreatorType => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2qOTI\",\"item\":\"Navbar_item__3I-R2\",\"activeLink\":\"Navbar_activeLink__2_x1e\"};","import {ActionType} from \"./store\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\n\r\nexport type SendMessageCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Ksusha\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valery\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your It?\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ]\r\n}\r\n\r\ntype StateDialogs = typeof initialState\r\n\r\n\r\nconst dialogsReducer = (state: StateDialogs = initialState, action: ActionType): StateDialogs => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [ ...state.messages, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string):SendMessageCreatorType => ({ type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1BI-A\"};","module.exports = __webpack_public_path__ + \"static/media/businessperson-computer-icons-avatar-clip-art-avatar.b2fce85a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2zM-y\"};","module.exports = __webpack_public_path__ + \"static/media/loaderr.818b13e5.svg\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"298395db-2088-448b-824f-15482d6c3999\"},\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn(\"obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status: string){\r\n        return instance.put(`/profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n"],"sourceRoot":""}