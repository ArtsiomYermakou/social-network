{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.tsx","components/common/FormsControls/FormsControls.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Textarea","props","hasError","meta","touched","error","className","styles","formControl","input","Input","createField","placeholder","name","validators","component","text","validate","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","key","id","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","reduxForm","form","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.dabe8cca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__x4y-b\",\"error\":\"FormsControls_error__2VbGF\",\"formSummaryError\":\"FormsControls_formSummaryError__DfVoe\"};","export const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"../FormsControls/FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.child}\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span className={styles.error}>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, validators: any, component: any, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__35bGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1OnL9\",\"posts\":\"MyPosts_posts__B_2z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item___TXG_\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props: any) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {updateStatus} from \"../../../redux/profile-reducer\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props: any) => {\r\n\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' alt=\"123\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"profile\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string,\r\n    likesCount: number,\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://i.pinimg.com/736x/1f/40/8d/1f408d7c2ad61ec6a4c8c28bd851fe85--my-works-mice.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React, {RefObject} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {TypeMyPosts} from \"../../../redux/store\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype PropType = {\r\n    posts: Array<TypeMyPosts>\r\n    newPostText?: string\r\n    addPost: (values: string) => void\r\n    updateNewPostText?: (text: any) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: PropType) => {\r\n\r\n        let postsElements =\r\n            [...props.posts]\r\n                .reverse()\r\n                .map(p => <Post message={p.message}\r\n                                                       key={p.id}\r\n                                                       likesCount={p.likesCount}/>)\r\n\r\n        type newPostType = RefObject<any>;\r\n\r\n        let newPostElement: newPostType = React.createRef();\r\n\r\n        let onAddPost = (values: any) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n);\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// type PropType = {\r\n    // posts: Array<TypeMyPosts>\r\n    // newPostText: string\r\n    // store: any\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\ntype PropsType = {\r\n    profile: any\r\n    status: any\r\n    updateStatus: any\r\n}\r\n\r\n\r\nconst Profile = (props: any) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: any\r\n    isAuth: any\r\n    status: string\r\n    updateStatus: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: string) => void\r\n    authorizedUserId: (userId: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose<any>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}